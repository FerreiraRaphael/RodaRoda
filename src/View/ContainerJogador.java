/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controllers.ControllerJogador;
import Observer.JogadorListener;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

/** Esta classe é para o objeto ContainerJogador. Sendo ele parte do Padrão de Projetos Observer como um listener de um objeto ControllerJogador.
 *
 * @author raphael
 */
public class ContainerJogador extends javax.swing.JPanel implements JogadorListener{
    private final Border vazia;
    private final TitledBorder borda;
    /** Construtor que criará uma instancia de ContainerJogador.
     * Creates new form ContainerJogador
     */
    public ContainerJogador() {
        initComponents();
        borda = BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.GREEN), "Sua Vez");
        vazia = BorderFactory.createEmptyBorder();
    }
    /** Este método irá modificar o nome para que possa aparecer na interface gráfica desta classe.
     * 
     * @param nome String - Esta é a palavra que será utilizada para poder alterar o nome da interface.
     */
    private void setNome(String nome){
        lbValueNome.setText(nome);
    }
    /** Este método irá modificar os pontos contidos na interface gráfica desta classe.
     * 
     * @param Pontos String - Valor que será utilizado para modificar os pontos.
     */
    private void setPontos(String Pontos){
        lbValuePontos.setText(Pontos);
    }
    /** Este método irá modificar os pontos na Roda(Pontos por Étapa) da interface gráfica.
     * 
     * @param pontos String - Valor que será utilizado para se realizar as modificações.
     */
    private void setPontosNaRoda(String pontos){
        lbValueRoda.setText(pontos);
    }
    
    public String getNome(){
        return lbValueNome.getText();
    }
    
    public String getPontos(){
        return lbValuePontos.getText();
    }
    
    public String getPontosNaRoda(){
        return lbValueRoda.getText();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerJogador = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        lbValueNome = new javax.swing.JLabel();
        lbPontos = new javax.swing.JLabel();
        lbValuePontos = new javax.swing.JLabel();
        lbValueRoda = new javax.swing.JLabel();
        lbRoda = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(600, 50));
        setPreferredSize(new java.awt.Dimension(600, 33));

        containerJogador.setBackground(new java.awt.Color(250, 250, 250));
        containerJogador.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        containerJogador.setEnabled(false);
        containerJogador.setPreferredSize(new java.awt.Dimension(130, 33));

        lbNome.setText("Nome:");

        lbValueNome.setText("jLabel2");

        lbPontos.setText("Pontos:");

        lbValuePontos.setText("jLabel4");

        lbValueRoda.setText("jLabel5");

        lbRoda.setText("Na Roda:");

        javax.swing.GroupLayout containerJogadorLayout = new javax.swing.GroupLayout(containerJogador);
        containerJogador.setLayout(containerJogadorLayout);
        containerJogadorLayout.setHorizontalGroup(
            containerJogadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerJogadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerJogadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerJogadorLayout.createSequentialGroup()
                        .addComponent(lbNome)
                        .addGap(18, 18, 18)
                        .addComponent(lbValueNome))
                    .addGroup(containerJogadorLayout.createSequentialGroup()
                        .addComponent(lbPontos)
                        .addGap(18, 18, 18)
                        .addComponent(lbValuePontos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 513, Short.MAX_VALUE)
                .addComponent(lbRoda)
                .addGap(18, 18, 18)
                .addComponent(lbValueRoda)
                .addContainerGap())
        );
        containerJogadorLayout.setVerticalGroup(
            containerJogadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerJogadorLayout.createSequentialGroup()
                .addGroup(containerJogadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(lbValueNome)
                    .addComponent(lbValueRoda)
                    .addComponent(lbRoda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerJogadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPontos)
                    .addComponent(lbValuePontos))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 796, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerJogador, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerJogador, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel containerJogador;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbPontos;
    private javax.swing.JLabel lbRoda;
    private javax.swing.JLabel lbValueNome;
    private javax.swing.JLabel lbValuePontos;
    private javax.swing.JLabel lbValueRoda;
    // End of variables declaration//GEN-END:variables

    /** Este método serve para passar os dados do jogador para sua interface. Ou seja, o ContainerJogador como um Listenner de ControllerJogador irá pegar as informações do Source do Observer para demonstrá-los em sua interface gráfica.
     * 
     * @param nome String - Nome do Jogador.
     */
    @Override
    public void jogadorCriado(String nome) {
        setNome(nome);
        setPontos("0");
        setPontosNaRoda("0");
    }
    /** Este método servirá para ouvir o Source e buscar informações sobre os Pontos Gerais e os Pontos na roda(pontos por Étapa).
     * 
     * @param pontos int - Será utilizado para passar os Pontos Gerais.
     * @param pontosNaRoda - Será utilizado para passar os pontos na Roda(pontos por Étapa).
     */
    @Override
    public void jogadorSomouPontos(int pontos, int pontosNaRoda) {
        setPontos(Integer.toString(pontos));
        setPontosNaRoda(Integer.toString(pontosNaRoda));
    }
    /** Este método irá tirar a borda da interface gráfica desta classe.
     * 
     */
    @Override
    public void jogadorPassouVez() {
        this.setBorder(vazia);
    }
    /** Este método irá colocar a borda da interface gráfica desta classe.
     * 
     */
    @Override
    public void vezDoJogador() {
        this.setBorder(borda);
    }
}
